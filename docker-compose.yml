cat > docker-compose.yml <<'YAML'
version: '3.8'

services:
  mongodb:
    image: mongo:6
    container_name: studypath-mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: studypath
    volumes:
      - mongo_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - internal
    expose:
      - "27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: studypath-redis
    restart: always
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - internal
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "PING"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: studypath-backend
    restart: always
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://admin:${MONGO_PASSWORD}@mongodb:27017/studypath?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      CLAUDE_API_KEY: ${CLAUDE_API_KEY}
      MATHPIX_API_KEY: ${MATHPIX_API_KEY}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - internal
      - web
    expose:
      - "3000"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "-T", "2", "-O", "-", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: studypath-nginx
    restart: always
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
      - ./uploads:/usr/share/nginx/html/uploads:ro
    ports:
      - "80:80"
      # - "443:443"  # 没证书先注释
    networks:
      - web
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "-T", "2", "-O", "-", "http://localhost/"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  internal:
    driver: bridge
    internal: true
  web:
    driver: bridge

volumes:
  mongo_data:
  redis_data:
  nginx_logs:
YAML
